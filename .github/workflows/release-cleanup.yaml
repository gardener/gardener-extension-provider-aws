name: Cleanup Old Releases

on:
  schedule:
    # Runs every Sunday at 12:00 AM UTC
    - cron: '0 0 * * 0'

  workflow_dispatch: # Optional manual trigger

permissions:
  contents: write   # This allows deleting branches

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Cleanup old branches
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
        run: |
          #!/bin/bash
          set -euo pipefail

          # Fetch the latest release tag
          latest_tag=$(gh release list --exclude-pre-releases --limit 1 | awk '{print $1}')

          if [[ $latest_tag =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Latest release: $latest_tag"
          else
            echo "Latest release tag '$latest_tag' is NOT a valid semver (vX.Y.Z)"
            exit 0
          fi

          # Parse major and minor
          IFS='.' read -r major minor patch <<<"${latest_tag#v}"
          
          # Check if minor version is smaller than 3
          if [[ $minor -lt 3 ]]; then
            echo "Latest minor version ($minor) is smaller than 3. No branches or milestones to delete."
            exit 0
          fi
          
          cutoff_minor=$((minor - 3))
          echo "Will delete all release branches <= v$major.$cutoff_minor"

          # List all branches and filter ones that match release-vX.Y
          for branch in $(gh api repos/$GH_REPO/branches --paginate --jq '.[].name'); do
            if [[ $branch =~ ^release-v([0-9]+)\.([0-9]+) ]]; then
              b_major=${BASH_REMATCH[1]}
              b_minor=${BASH_REMATCH[2]}

              if [[ $b_major -eq $major && $b_minor -le $cutoff_minor ]]; then
                echo "Deleting old branch: $branch"
                gh api -X DELETE "repos/$GH_REPO/git/refs/heads/$branch" || true
              fi
            fi
          done
