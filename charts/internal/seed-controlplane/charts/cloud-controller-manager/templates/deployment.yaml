apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app: kubernetes
    role: cloud-controller-manager
    high-availability-config.resources.gardener.cloud/type: controller
spec:
  revisionHistoryLimit: 1
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: kubernetes
      role: cloud-controller-manager
  template:
    metadata:
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        gardener.cloud/role: controlplane
        app: kubernetes
        role: cloud-controller-manager
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-shoot-apiserver: allowed
        networking.gardener.cloud/from-prometheus: allowed
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
    spec:
      automountServiceAccountToken: false
      priorityClassName: gardener-system-300
      containers:
      - name: aws-cloud-controller-manager
        image: {{ index .Values.images "cloud-controller-manager" }}
        imagePullPolicy: IfNotPresent
        command:
        {{- if semverCompare "< 1.25" .Values.kubernetesVersion }}
        - /aws-cloud-controller-manager
        {{- else }}
        - /bin/aws-cloud-controller-manager
        {{- end }}
        - --allocate-node-cidrs=true
        - --cloud-provider=aws
        - --cloud-config=/etc/kubernetes/cloudprovider/cloudprovider.conf
        - --cluster-cidr={{ .Values.podNetwork }}
        - --cluster-name={{ .Values.clusterName }}
        - --concurrent-service-syncs=10
        - --configure-cloud-routes=false
        {{- include "cloud-controller-manager.featureGates" . | trimSuffix "," | indent 8 }}
        - --kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
        - --authentication-kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
        - --authorization-kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
        - --leader-elect=true
        - --secure-port={{ include "cloud-controller-manager.port" . }}
        {{- if semverCompare "< 1.24" .Values.kubernetesVersion }}
        - --port=0
        {{- end }}
        - --tls-cert-file=/var/lib/cloud-controller-manager-server/tls.crt
        - --tls-private-key-file=/var/lib/cloud-controller-manager-server/tls.key
        - --tls-cipher-suites={{ .Values.tlsCipherSuites | join "," }}
        - --use-service-account-credentials
        - --v=2
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: cloudprovider
              key: accessKeyID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: cloudprovider
              key: secretAccessKey
        livenessProbe:
          httpGet:
            path: /healthz
            scheme: HTTPS
            port: {{ include "cloud-controller-manager.port" . }}
          successThreshold: 1
          failureThreshold: 2
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 15
        ports:
        - containerPort: {{ include "cloud-controller-manager.port" . }}
          name: metrics
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
          name: kubeconfig
          readOnly: true
        - name: cloud-controller-manager-server
          mountPath: /var/lib/cloud-controller-manager-server
        - name: cloud-provider-config
          mountPath: /etc/kubernetes/cloudprovider
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: kubeconfig
        projected:
          defaultMode: 420
          sources:
          - secret:
              items:
                - key: kubeconfig
                  path: kubeconfig
              name: {{ .Values.global.genericTokenKubeconfigSecretName }}
              optional: false
          - secret:
              items:
                - key: token
                  path: token
              name: shoot-access-cloud-controller-manager
              optional: false
      - name: cloud-controller-manager-server
        secret:
          secretName: {{ .Values.secrets.server }}
      - name: cloud-provider-config
        configMap:
          name: cloud-provider-config
