image:
  repository: eu.gcr.io/gardener-project/gardener/extensions/provider-aws
  tag: latest
  pullPolicy: IfNotPresent

images: {}
#  alpine: ""
#  pause: ""

replicaCount: 1
maxUnavailable: 1
maxSurge: 50%

resources: {}
vpa:
  enabled: true
  resourcePolicy:
    minAllowed:
      memory: 64Mi
  updatePolicy:
    updateMode: "Auto"

metricsPort: 8080
healthPort: 8081

controllers:
  backupbucket:
    concurrentSyncs: 5
  backupentry:
    concurrentSyncs: 5
  bastion:
    concurrentSyncs: 5
  controlplane:
    concurrentSyncs: 5
  dnsrecord:
    concurrentSyncs: 5
    providerClientQPS: 1
    providerClientBurst: 5
    providerClientWaitTimeout: 2s
  infrastructure:
    concurrentSyncs: 5
  worker:
    concurrentSyncs: 5
  healthcheck:
    concurrentSyncs: 5
  heartbeat: 
    renewIntervalSeconds: 30 
  ignoreOperationAnnotation: false

disableControllers: []
disableWebhooks: []
ignoreResources: false

# imageVectorOverwrite: |
#   images:
#   - name: pause-container
#     sourceRepository: github.com/kubernetes/kubernetes/blob/master/build/pause/Dockerfile
#     repository: gcr.io/google_containers/pause-amd64
#     tag: "3.0"
#     version: 1.11.x
#   - name: pause-container
#     sourceRepository: github.com/kubernetes/kubernetes/blob/master/build/pause/Dockerfile
#     repository: gcr.io/google_containers/pause-amd64
#     tag: "3.1"
#     version: ">= 1.12"
#   ...

webhookConfig:
  servicePort: 443
  serverPort: 10250

leaderElection:
  resourceLock: leases

## settings for metrics, e.g. scraping by seed-prometheus
##
metrics:
  ## enable metrics scraping
  ##
  enableScraping: true

config:
  clientConnection:
    acceptContentTypes: application/json
    contentType: application/json
    qps: 100
    burst: 130
  etcd:
    storage:
      className: gardener.cloud-fast
      capacity: 80Gi
      provisioner: kubernetes.io/aws-ebs
      volumeBindingMode: WaitForFirstConsumer
      encrypted: true

gardener:
  version: ""
  seed:
    provider: aws
